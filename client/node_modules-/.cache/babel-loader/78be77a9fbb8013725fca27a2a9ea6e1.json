{"ast":null,"code":"import { GLOBALTYPES } from './globalTypes';\nimport { postDataAPI } from '../../utils/fetchData';\nimport valid from '../../utils/valid';\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI('login', data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstLogin\", true);\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const refreshToken = () => async dispatch => {\n  const firstLogin = localStorage.getItem(\"firstLogin\");\n\n  if (firstLogin) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n\n    try {\n      const res = await postDataAPI('refresh_token');\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {\n          token: res.data.access_token,\n          user: res.data.user\n        }\n      });\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  }\n};\nexport const register = data => async dispatch => {\n  const check = valid(data);\n  if (check.errLength > 0) return dispatch({\n    type: GLOBALTYPES.ALERT,\n    payload: check.errMsg\n  });\n\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI('register', data);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstLogin\", true);\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem('firstLogin');\n    await postDataAPI('logout');\n    window.location.href = \"/\";\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"names":["GLOBALTYPES","postDataAPI","valid","login","data","dispatch","type","ALERT","payload","loading","res","AUTH","token","access_token","user","localStorage","setItem","success","msg","err","error","response","refreshToken","firstLogin","getItem","register","check","errLength","errMsg","logout","removeItem","window","location","href"],"sources":["/Users/jiawenzhu/developer/MERN-Stack-Build-a-social-media-app/client/src/redux/actions/authAction.js"],"sourcesContent":["import { GLOBALTYPES } from './globalTypes'\nimport { postDataAPI } from '../../utils/fetchData'\nimport valid from '../../utils/valid'\n\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n        const res = await postDataAPI('login', data)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                success: res.data.msg\n            } \n        })\n        \n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\nexport const refreshToken = () => async (dispatch) => {\n    const firstLogin = localStorage.getItem(\"firstLogin\")\n    if(firstLogin){\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n\n        try {\n            const res = await postDataAPI('refresh_token')\n            dispatch({ \n                type: GLOBALTYPES.AUTH, \n                payload: {\n                    token: res.data.access_token,\n                    user: res.data.user\n                } \n            })\n\n            dispatch({ type: GLOBALTYPES.ALERT, payload: {} })\n\n        } catch (err) {\n            dispatch({ \n                type: GLOBALTYPES.ALERT, \n                payload: {\n                    error: err.response.data.msg\n                } \n            })\n        }\n    }\n}\n\nexport const register = (data) => async (dispatch) => {\n    const check = valid(data)\n    if(check.errLength > 0)\n    return dispatch({type: GLOBALTYPES.ALERT, payload: check.errMsg})\n\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}})\n\n        const res = await postDataAPI('register', data)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                success: res.data.msg\n            } \n        })\n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\nexport const logout = () => async (dispatch) => {\n    try {\n        localStorage.removeItem('firstLogin')\n        await postDataAPI('logout')\n        window.location.href = \"/\"\n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}