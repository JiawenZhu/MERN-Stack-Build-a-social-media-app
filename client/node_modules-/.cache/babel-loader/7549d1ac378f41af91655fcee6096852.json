{"ast":null,"code":"const valid = _ref => {\n  let {\n    fullname,\n    username,\n    email,\n    password,\n    cf_password\n  } = _ref;\n  const err = {};\n\n  if (!fullname) {\n    err.fullname = \"Please add your full name.\";\n  } else if (fullname.length > 25) {\n    err.fullname = \"Full name is up to 25 characters long.\";\n  }\n\n  if (!username) {\n    err.username = \"Please add your user name.\";\n  } else if (username.replace(/ /g, '').length > 25) {\n    err.username = \"User name is up to 25 characters long.\";\n  }\n\n  if (!email) {\n    err.email = \"Please add your email.\";\n  } else if (!validateEmail(email)) {\n    err.email = \"Email format is incorrect.\";\n  }\n\n  if (!password) {\n    err.password = \"Please add your password.\";\n  } else if (password.length < 6) {\n    err.password = \"Password must be at least 6 characters.\";\n  }\n\n  if (password !== cf_password) {\n    err.cf_password = \"Confirm password did not match.\";\n  }\n\n  return {\n    errMsg: err,\n    errLength: Object.keys(err).length\n  };\n};\n\nfunction validateEmail(email) {\n  // eslint-disable-next-line\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\nexport default valid;","map":{"version":3,"names":["valid","fullname","username","email","password","cf_password","err","length","replace","validateEmail","errMsg","errLength","Object","keys","re","test"],"sources":["/Users/jiawenzhu/developer/MERN-Stack-Build-a-social-media-app/client/src/utils/valid.js"],"sourcesContent":["const valid = ({fullname, username, email, password, cf_password}) => {\n    const err = {}\n\n    if(!fullname) {\n        err.fullname = \"Please add your full name.\"\n    }else if(fullname.length > 25){\n        err.fullname = \"Full name is up to 25 characters long.\"\n    }\n\n    if(!username) {\n        err.username = \"Please add your user name.\"\n    }else if(username.replace(/ /g, '').length > 25){\n        err.username = \"User name is up to 25 characters long.\"\n    }\n\n    if(!email) {\n        err.email = \"Please add your email.\"\n    }else if(!validateEmail(email)){\n        err.email = \"Email format is incorrect.\"\n    }\n\n    if(!password) {\n        err.password = \"Please add your password.\"\n    }else if(password.length < 6){\n        err.password = \"Password must be at least 6 characters.\"\n    }\n\n    if(password !== cf_password) {\n        err.cf_password = \"Confirm password did not match.\"\n    }\n\n    return {\n        errMsg: err,\n        errLength: Object.keys(err).length\n    }\n}\n\n\n\nfunction validateEmail(email) {\n    // eslint-disable-next-line\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n  \nexport default valid"],"mappings":"AAAA,MAAMA,KAAK,GAAG,QAAwD;EAAA,IAAvD;IAACC,QAAD;IAAWC,QAAX;IAAqBC,KAArB;IAA4BC,QAA5B;IAAsCC;EAAtC,CAAuD;EAClE,MAAMC,GAAG,GAAG,EAAZ;;EAEA,IAAG,CAACL,QAAJ,EAAc;IACVK,GAAG,CAACL,QAAJ,GAAe,4BAAf;EACH,CAFD,MAEM,IAAGA,QAAQ,CAACM,MAAT,GAAkB,EAArB,EAAwB;IAC1BD,GAAG,CAACL,QAAJ,GAAe,wCAAf;EACH;;EAED,IAAG,CAACC,QAAJ,EAAc;IACVI,GAAG,CAACJ,QAAJ,GAAe,4BAAf;EACH,CAFD,MAEM,IAAGA,QAAQ,CAACM,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,EAA2BD,MAA3B,GAAoC,EAAvC,EAA0C;IAC5CD,GAAG,CAACJ,QAAJ,GAAe,wCAAf;EACH;;EAED,IAAG,CAACC,KAAJ,EAAW;IACPG,GAAG,CAACH,KAAJ,GAAY,wBAAZ;EACH,CAFD,MAEM,IAAG,CAACM,aAAa,CAACN,KAAD,CAAjB,EAAyB;IAC3BG,GAAG,CAACH,KAAJ,GAAY,4BAAZ;EACH;;EAED,IAAG,CAACC,QAAJ,EAAc;IACVE,GAAG,CAACF,QAAJ,GAAe,2BAAf;EACH,CAFD,MAEM,IAAGA,QAAQ,CAACG,MAAT,GAAkB,CAArB,EAAuB;IACzBD,GAAG,CAACF,QAAJ,GAAe,yCAAf;EACH;;EAED,IAAGA,QAAQ,KAAKC,WAAhB,EAA6B;IACzBC,GAAG,CAACD,WAAJ,GAAkB,iCAAlB;EACH;;EAED,OAAO;IACHK,MAAM,EAAEJ,GADL;IAEHK,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYP,GAAZ,EAAiBC;EAFzB,CAAP;AAIH,CAnCD;;AAuCA,SAASE,aAAT,CAAuBN,KAAvB,EAA8B;EAC1B;EACA,MAAMW,EAAE,GAAG,2JAAX;EACA,OAAOA,EAAE,CAACC,IAAH,CAAQZ,KAAR,CAAP;AACH;;AAED,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}